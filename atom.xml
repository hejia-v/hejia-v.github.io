<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>雪落马蹄的博客</title>
  
  <subtitle>风雪夜归人</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://hejia-v.github.io/"/>
  <updated>2018-02-09T13:18:33.000Z</updated>
  <id>https://hejia-v.github.io/</id>
  
  <author>
    <name>雪落马蹄</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>武侠动作手游初稿(个人向)</title>
    <link href="https://hejia-v.github.io/2018/02/09/wuxia-act-mobile-game/"/>
    <id>https://hejia-v.github.io/2018/02/09/wuxia-act-mobile-game/</id>
    <published>2018-02-09T13:18:33.000Z</published>
    <updated>2018-02-09T13:18:33.000Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;假日里闲来无事，回顾了一下自己掌握的知识，根据自己已有的技术储备，整理了一下开发一款武侠动作手游的方方面面。我并非专业策划，写下这篇文章，依据的是之前的开发经验和阅历，以及体验过的一些游戏，难免会有一些不合理之处，这些还恳请小伙伴们多多指教。本文并非策划文档，也不详谈技术，大致相当于一个大纲，对游戏的开发做一个总览，需要做些什么，目前能做到什么样的程度，心里先有一个底。&lt;/p&gt;
    
    </summary>
    
      <category term="game" scheme="https://hejia-v.github.io/categories/game/"/>
    
    
      <category term="game" scheme="https://hejia-v.github.io/tags/game/"/>
    
  </entry>
  
  <entry>
    <title>ET框架客户端源码阅读</title>
    <link href="https://hejia-v.github.io/2018/01/05/read-et-framework-client-code/"/>
    <id>https://hejia-v.github.io/2018/01/05/read-et-framework-client-code/</id>
    <published>2018-01-05T13:24:35.000Z</published>
    <updated>2018-01-05T13:24:35.000Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://github.com/egametang/ET&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;ET&lt;/a&gt;是一个unity的前后端框架，包含客户端和服务端两部分。采用的是组件式设计，前后端都由C#实现，并且前后端共享了部分代码，可以很方便的进行全栈开发。客户端方面的功能也比较齐全，基本包含了手游开发中使用频率比较高的各个功能。前后端都非常完整地实现了热更新，热更新机制采用的是&lt;a href=&quot;https://github.com/Ourpalm/ILRuntime&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;ILRuntime&lt;/a&gt;，即把要热更新的C#代码当做脚本来进行热更，终于可以不用使用讨厌鬼lua了ヽ(￣▽￣)ﾉ。如果手头没有代码积累，ET框架是一个非常不错的选择。这个框架很对我胃口，业余抽空先看了一下客户端部分，感觉设计得挺精妙的，这里梳理一下，方便理解，以免使用该框架时没有头绪。另外也感慨一下，C#确实好用，语法很甜，使用起来，舒适度和Python差不多，同时又是强类型的，效率也不错，开发起来简直是一种享受。&lt;/p&gt;
    
    </summary>
    
      <category term="unity" scheme="https://hejia-v.github.io/categories/unity/"/>
    
      <category term="game" scheme="https://hejia-v.github.io/categories/unity/game/"/>
    
    
      <category term="game" scheme="https://hejia-v.github.io/tags/game/"/>
    
      <category term="unity" scheme="https://hejia-v.github.io/tags/unity/"/>
    
  </entry>
  
  <entry>
    <title>blender基本操作</title>
    <link href="https://hejia-v.github.io/2018/01/03/blender-start/"/>
    <id>https://hejia-v.github.io/2018/01/03/blender-start/</id>
    <published>2018-01-03T13:02:51.000Z</published>
    <updated>2018-01-03T13:02:51.000Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;大概在13年到14年，我曾学习和使用一段时间&lt;a href=&quot;https://www.blender.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;blender&lt;/a&gt;，感觉它的多边形建模功能极其方便，自带雕刻功能，还可以很方便的自定义Python脚本，一时间爱不释手。后来由于任务繁忙，并且也不是做这方面的，就很少使用了，于是就落下了。如今blender越来越多的被应用到手游制作流程中，即将到来的&lt;a href=&quot;https://www.blender.org/2-8/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;blender2.8&lt;/a&gt;也将带来许多极其强悍的功能，是时候重新温故一下blender了。&lt;/p&gt;
    
    </summary>
    
      <category term="tool" scheme="https://hejia-v.github.io/categories/tool/"/>
    
    
      <category term="tool" scheme="https://hejia-v.github.io/tags/tool/"/>
    
  </entry>
  
  <entry>
    <title>windows上安装tensorflow</title>
    <link href="https://hejia-v.github.io/2017/12/16/install-tensorflow/"/>
    <id>https://hejia-v.github.io/2017/12/16/install-tensorflow/</id>
    <published>2017-12-16T13:14:19.000Z</published>
    <updated>2017-12-16T13:14:19.000Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;访问-tensorflow-官网&quot;&gt;&lt;a href=&quot;#访问-tensorflow-官网&quot; class=&quot;headerlink&quot; title=&quot;访问 tensorflow 官网&quot;&gt;&lt;/a&gt;访问 tensorflow 官网&lt;/h3&gt;&lt;p&gt;方法一: 直接访问 &lt;a href=&quot;https://tensorflow.google.cn&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://tensorflow.google.cn&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="ml" scheme="https://hejia-v.github.io/categories/ml/"/>
    
    
      <category term="ml" scheme="https://hejia-v.github.io/tags/ml/"/>
    
  </entry>
  
  <entry>
    <title>在illustrator中使用latex公式</title>
    <link href="https://hejia-v.github.io/2017/12/04/illustrator-latex/"/>
    <id>https://hejia-v.github.io/2017/12/04/illustrator-latex/</id>
    <published>2017-12-03T23:39:43.000Z</published>
    <updated>2017-12-03T23:39:43.000Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;Adobe Illustrator 是一款强大的矢量图形软件，当我们在里面做好图形后，可能需要在里面插入一些数学符号或者数学公式什么的，这时一般考虑使用 Latex 来输出这些特殊文本。下面介绍一下如何在 Illustrator 中使用 Latex 。&lt;/p&gt;
    
    </summary>
    
      <category term="tool" scheme="https://hejia-v.github.io/categories/tool/"/>
    
    
      <category term="tool" scheme="https://hejia-v.github.io/tags/tool/"/>
    
  </entry>
  
  <entry>
    <title>一个简单的BP神经网络的实现</title>
    <link href="https://hejia-v.github.io/2017/12/02/bp-neural-network/"/>
    <id>https://hejia-v.github.io/2017/12/02/bp-neural-network/</id>
    <published>2017-12-02T04:47:09.000Z</published>
    <updated>2017-12-02T04:47:09.000Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;不详述神经网络模型，只记录一下实现BP神经网络时的推导过程。&lt;/p&gt;
    
    </summary>
    
      <category term="ml" scheme="https://hejia-v.github.io/categories/ml/"/>
    
    
      <category term="ml" scheme="https://hejia-v.github.io/tags/ml/"/>
    
  </entry>
  
  <entry>
    <title>android开发中的一些经验</title>
    <link href="https://hejia-v.github.io/2017/12/01/android-issues-md/"/>
    <id>https://hejia-v.github.io/2017/12/01/android-issues-md/</id>
    <published>2017-12-01T13:45:05.000Z</published>
    <updated>2017-12-01T13:45:05.000Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;记录一下android开发中的一些经验，本文将持续更新。&lt;/p&gt;
    
    </summary>
    
      <category term="android" scheme="https://hejia-v.github.io/categories/android/"/>
    
    
      <category term="android" scheme="https://hejia-v.github.io/tags/android/"/>
    
  </entry>
  
  <entry>
    <title>HLSL 常用函数</title>
    <link href="https://hejia-v.github.io/2017/12/01/hlsl-library/"/>
    <id>https://hejia-v.github.io/2017/12/01/hlsl-library/</id>
    <published>2017-12-01T00:15:02.000Z</published>
    <updated>2017-12-01T00:15:02.000Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;HLSL是&lt;a href=&quot;https://docs.unity3d.com/Manual/SL-ShadingLanguage.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;unity推荐&lt;/a&gt;的shader语言，HLSL和Cg很相似。这里整理了一下网络上收集到的相关资料，方便自己学习和查询。&lt;/p&gt;
&lt;h2 id=&quot;HLSL固有函数&quot;&gt;&lt;a href=&quot;#HLSL固有函数&quot; class=&quot;headerlink&quot; title=&quot;HLSL固有函数&quot;&gt;&lt;/a&gt;HLSL固有函数&lt;/h2&gt;&lt;p&gt;Intrinsic Functions (DirectX HLSL)&lt;/p&gt;
    
    </summary>
    
      <category term="shader" scheme="https://hejia-v.github.io/categories/shader/"/>
    
    
      <category term="shader" scheme="https://hejia-v.github.io/tags/shader/"/>
    
  </entry>
  
</feed>
